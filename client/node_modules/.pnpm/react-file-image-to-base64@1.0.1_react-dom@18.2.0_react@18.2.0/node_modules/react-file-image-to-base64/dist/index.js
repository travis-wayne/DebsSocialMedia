"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const moment_1 = __importDefault(require("moment"));
const material_1 = require("@mui/material");
const PhotoCameraOutlined_1 = __importDefault(require("@mui/icons-material/PhotoCameraOutlined"));
const ReactImageFileToBase64 = ({ onCompleted, multiple, CustomisedButton, preferredButtonText, }) => {
    const inputRef = (0, react_1.useRef)(null);
    //TRIGGERS THE FILE TO OPEN DEVICE FOLDER FOR IMAGE SELECTION
    const handleFilesSelection = () => {
        var _a;
        inputRef.current.value = "";
        (_a = inputRef.current) === null || _a === void 0 ? void 0 : _a.click();
    };
    const handleOnInputFileChange = (event) => {
        const selectedFiles = event.target.files;
        const base64Files = [];
        //event.target.files  RETURN A FILELIST TYPE WHICH IS AN OBJECT
        //CONVERT SELECTED FILES DOCUMENT TO ARRAY AND MAP THROUGH
        Array.from(selectedFiles).map((file) => {
            //DOUBLE CHECK IF FILE TYPE MATCHES ACCEPTED EXTENSION CRITERIA
            if (!/\.(jpeg|jpg|png|gif)$/i.test(file.name))
                return console.log("blah");
            const reader = new FileReader();
            reader.readAsDataURL(file);
            return (reader.onload = () => {
                //OBJECT OF FILE THAT'LL BE RETURNED TO THE USER
                const fileInfo = {
                    file_name: file === null || file === void 0 ? void 0 : file.name,
                    file_size: `${Math.round(file.size / 1000)} KB`,
                    file_type: file === null || file === void 0 ? void 0 : file.type,
                    last_modified: (0, moment_1.default)(file.lastModified).format(),
                    base64_file: reader.result,
                    default_file: file,
                };
                base64Files.push(fileInfo);
                if (base64Files.length === Array.from(selectedFiles).length) {
                    onCompleted(base64Files);
                }
            });
        });
    };
    return ((0, jsx_runtime_1.jsxs)("label", Object.assign({ htmlFor: "select_images", className: "react-image-file-to-base64" }, { children: [(0, jsx_runtime_1.jsx)("input", { type: "file", name: "create_media_input", id: "create_media_input", accept: "image/png, .jpeg, .jpg, .gif", ref: inputRef, multiple: multiple, onChange: handleOnInputFileChange, style: { display: "none" } }), CustomisedButton ? ((0, jsx_runtime_1.jsx)(CustomisedButton, { triggerInput: handleFilesSelection })) : ((0, jsx_runtime_1.jsxs)(material_1.Button, Object.assign({ variant: "contained", onClick: handleFilesSelection, style: { textTransform: "initial" } }, { children: [(0, jsx_runtime_1.jsx)(PhotoCameraOutlined_1.default, { style: { marginRight: "7px" } }), preferredButtonText ? preferredButtonText : "Select files"] })))] })));
};
exports.default = ReactImageFileToBase64;
ReactImageFileToBase64.defaultProps = {
    multiple: false,
};
//# sourceMappingURL=index.js.map