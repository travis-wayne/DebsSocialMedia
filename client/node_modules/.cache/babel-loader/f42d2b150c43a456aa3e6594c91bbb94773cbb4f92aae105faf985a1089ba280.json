{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  openplayer: false,\n  type: \"audio\",\n  episode: null,\n  podid: null,\n  currenttime: 0,\n  index: 0\n};\nconst audioplayer = createSlice({\n  name: 'audioplayer',\n  initialState,\n  reducers: {\n    openPlayer: (state, action) => {\n      state.openplayer = true;\n      state.type = action.payload.type;\n      state.episode = action.payload.episode;\n      state.podid = action.payload.podid;\n      state.currenttime = action.payload.currenttime;\n      state.index = action.payload.index;\n    },\n    closePlayer: state => {\n      state.openplayer = false;\n    },\n    setCurrentTime: (state, action) => {\n      state.currenttime = action.payload.currenttime;\n    }\n  }\n});\nexport const {\n  openPlayer,\n  closePlayer,\n  setCurrentTime\n} = audioplayer.actions;\nexport default audioplayer.reducer;","map":{"version":3,"names":["createSlice","initialState","openplayer","type","episode","podid","currenttime","index","audioplayer","name","reducers","openPlayer","state","action","payload","closePlayer","setCurrentTime","actions","reducer"],"sources":["/Users/traviswayne/Documents/GitHub/DebsSocialMedia/client/src/redux/audioplayerSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {\n    openplayer: false,\n    type: \"audio\",\n    episode: null,\n    podid: null,\n    currenttime: 0,\n    index: 0\n};\n\nconst audioplayer = createSlice({\n    name: 'audioplayer',\n    initialState,\n    reducers: {\n        openPlayer: (state, action) => {\n            state.openplayer = true;\n            state.type = action.payload.type;\n            state.episode = action.payload.episode;\n            state.podid = action.payload.podid;\n            state.currenttime = action.payload.currenttime;\n            state.index = action.payload.index;\n        },\n        closePlayer: (state) => {\n            state.openplayer = false;\n        },\n        setCurrentTime: (state, action) => {\n            state.currenttime = action.payload.currenttime;\n        }\n    }\n});\n\nexport const { openPlayer, closePlayer,setCurrentTime } = audioplayer.actions;\n\nexport default audioplayer.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,KAAK;EACjBC,IAAI,EAAE,OAAO;EACbC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE,IAAI;EACXC,WAAW,EAAE,CAAC;EACdC,KAAK,EAAE;AACX,CAAC;AAED,MAAMC,WAAW,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,aAAa;EACnBR,YAAY;EACZS,QAAQ,EAAE;IACNC,UAAU,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3BD,KAAK,CAACV,UAAU,GAAG,IAAI;MACvBU,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO,CAACX,IAAI;MAChCS,KAAK,CAACR,OAAO,GAAGS,MAAM,CAACC,OAAO,CAACV,OAAO;MACtCQ,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO,CAACT,KAAK;MAClCO,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACR,WAAW;MAC9CM,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO,CAACP,KAAK;IACtC,CAAC;IACDQ,WAAW,EAAGH,KAAK,IAAK;MACpBA,KAAK,CAACV,UAAU,GAAG,KAAK;IAC5B,CAAC;IACDc,cAAc,EAAEA,CAACJ,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO,CAACR,WAAW;IAClD;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEK,UAAU;EAAEI,WAAW;EAACC;AAAe,CAAC,GAAGR,WAAW,CAACS,OAAO;AAE7E,eAAeT,WAAW,CAACU,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}