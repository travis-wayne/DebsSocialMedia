{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  currentUser: null,\n  loading: false,\n  error: false\n};\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: state => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.currentUser = action.payload.user;\n      localStorage.setItem('podstreamtoken', action.payload.token);\n    },\n    loginFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: state => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n      localStorage.removeItem('token');\n    },\n    verified: (state, action) => {\n      if (state.currentUser) {\n        state.currentUser.verified = action.payload;\n      }\n    },\n    displayPodcastFailure: state => {\n      state.loading = false;\n      state.error = true;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(state.currentUser.subscribedUsers.findIndex(channelId => channelId === action.payload), 1);\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logout,\n  displayPodcastFailure,\n  subscription,\n  verified\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","currentUser","loading","error","userSlice","name","reducers","loginStart","state","loginSuccess","action","payload","user","localStorage","setItem","token","loginFailure","logout","removeItem","verified","displayPodcastFailure","subscription","subscribedUsers","includes","splice","findIndex","channelId","push","actions","reducer"],"sources":["/Users/traviswayne/Documents/GitHub/DebsSocialMedia/client/src/redux/userSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nconst initialState = {\n  currentUser: null,\n  loading: false,\n  error: false,\n};\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    loginStart: (state) => {\n      state.loading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.loading = false;\n      state.currentUser = action.payload.user;\n      localStorage.setItem('podstreamtoken', action.payload.token);\n    },\n    loginFailure: (state) => {\n      state.loading = false;\n      state.error = true;\n    },\n    logout: (state) => {\n      state.currentUser = null;\n      state.loading = false;\n      state.error = false;\n      localStorage.removeItem('token');\n    },\n    verified: (state, action) => {\n      if(state.currentUser){\n        state.currentUser.verified = action.payload;\n      }\n    },\n    displayPodcastFailure: (state) => {\n      state.loading = false;\n      state.error = true;\n    },\n    subscription: (state, action) => {\n      if (state.currentUser.subscribedUsers.includes(action.payload)) {\n        state.currentUser.subscribedUsers.splice(\n          state.currentUser.subscribedUsers.findIndex(\n            (channelId) => channelId === action.payload\n          ),\n          1\n        );\n      } else {\n        state.currentUser.subscribedUsers.push(action.payload);\n      }\n    },\n  },\n});\n\nexport const { loginStart, loginSuccess, loginFailure, logout, displayPodcastFailure, subscription,verified } =\n  userSlice.actions;\n\nexport default userSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,IAAI;EACjBC,OAAO,EAAE,KAAK;EACdC,KAAK,EAAE;AACT,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGL,WAAW,CAAC;EACnCM,IAAI,EAAE,MAAM;EACZL,YAAY;EACZM,QAAQ,EAAE;IACRC,UAAU,EAAGC,KAAK,IAAK;MACrBA,KAAK,CAACN,OAAO,GAAG,IAAI;IACtB,CAAC;IACDO,YAAY,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACP,WAAW,GAAGS,MAAM,CAACC,OAAO,CAACC,IAAI;MACvCC,YAAY,CAACC,OAAO,CAAC,gBAAgB,EAAEJ,MAAM,CAACC,OAAO,CAACI,KAAK,CAAC;IAC9D,CAAC;IACDC,YAAY,EAAGR,KAAK,IAAK;MACvBA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDc,MAAM,EAAGT,KAAK,IAAK;MACjBA,KAAK,CAACP,WAAW,GAAG,IAAI;MACxBO,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,KAAK;MACnBU,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAClC,CAAC;IACDC,QAAQ,EAAEA,CAACX,KAAK,EAAEE,MAAM,KAAK;MAC3B,IAAGF,KAAK,CAACP,WAAW,EAAC;QACnBO,KAAK,CAACP,WAAW,CAACkB,QAAQ,GAAGT,MAAM,CAACC,OAAO;MAC7C;IACF,CAAC;IACDS,qBAAqB,EAAGZ,KAAK,IAAK;MAChCA,KAAK,CAACN,OAAO,GAAG,KAAK;MACrBM,KAAK,CAACL,KAAK,GAAG,IAAI;IACpB,CAAC;IACDkB,YAAY,EAAEA,CAACb,KAAK,EAAEE,MAAM,KAAK;MAC/B,IAAIF,KAAK,CAACP,WAAW,CAACqB,eAAe,CAACC,QAAQ,CAACb,MAAM,CAACC,OAAO,CAAC,EAAE;QAC9DH,KAAK,CAACP,WAAW,CAACqB,eAAe,CAACE,MAAM,CACtChB,KAAK,CAACP,WAAW,CAACqB,eAAe,CAACG,SAAS,CACxCC,SAAS,IAAKA,SAAS,KAAKhB,MAAM,CAACC,OACtC,CAAC,EACD,CACF,CAAC;MACH,CAAC,MAAM;QACLH,KAAK,CAACP,WAAW,CAACqB,eAAe,CAACK,IAAI,CAACjB,MAAM,CAACC,OAAO,CAAC;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEJ,UAAU;EAAEE,YAAY;EAAEO,YAAY;EAAEC,MAAM;EAAEG,qBAAqB;EAAEC,YAAY;EAACF;AAAS,CAAC,GAC3Gf,SAAS,CAACwB,OAAO;AAEnB,eAAexB,SAAS,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}